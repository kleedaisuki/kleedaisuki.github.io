---
// src/components/NotFoundPage.astro
import BaseLayout from "@layouts/BaseLayout.astro";
import { useTranslations } from "@i18n/utils";
import { defaultLang } from "@i18n/ui";

// 这个组件现在通过 props 来接收语言，而不是自己去猜！
const { lang = defaultLang } = Astro.props as { lang?: "zh" | "en" };
const t = useTranslations(lang);
---

<BaseLayout pageTitle={t("404.title")}>
    <div class="terminal-window">
        <div class="terminal-header">
            <div class="dots">
                <span class="dot red"></span>
                <span class="dot yellow"></span>
                <span class="dot green"></span>
            </div>
            <div class="title">kleedaisuki:~</div>
        </div>
        <div class="terminal-body">
            <p class="error">{t("404.error")}<span class="cursor">_</span></p>
            <p>{t("404.message")}</p>
            <p>{t("404.suggestion")}</p>
            <p>
                <a href={lang === "zh" ? "/zh/" : "/en/"} class="command">
                    <span class="prompt">{t("404.command.home")}</span>
                </a>
            </p>
        </div>
    </div>
</BaseLayout>

<style>
    /* 这里的样式和之前 404.astro 里的一模一样 */
    .terminal-window {
        --header-height: 30px;
        background-color: var(--surface-color);
        border: 1px solid var(--border-color);
        border-radius: var(--border-radius-medium);
        box-shadow: 0 8px 24px var(--shadow-color);
        margin: 4rem auto;
        font-family: var(--font-mono);
        font-size: 0.9em;
    }
    .terminal-header {
        height: var(--header-height);
        background-color: var(--border-color);
        display: flex;
        align-items: center;
        padding: 0 10px;
        border-top-left-radius: var(--border-radius-medium);
        border-top-right-radius: var(--border-radius-medium);
    }
    .dots {
        display: flex;
        gap: 6px;
    }
    .dot {
        width: 12px;
        height: 12px;
        border-radius: 50%;
    }
    .dot.red {
        background-color: #ff5f56;
    }
    .dot.yellow {
        background-color: #ffbd2e;
    }
    .dot.green {
        background-color: #27c93f;
    }
    .title {
        color: var(--text-color);
        margin: 0 auto;
        font-size: 0.8em;
    }
    .terminal-body {
        padding: 1.5rem;
        line-height: 1.8;
    }
    .terminal-body p {
        margin: 0 0 1em;
    }
    .prompt {
        color: var(--accent-color);
        font-weight: bold;
    }
    .error {
        color: #f7768e;
    }
    .command {
        color: var(--text-color);
        text-decoration: none;
        border-bottom: 2px solid transparent;
    }
    .command:hover {
        color: var(--accent-hover-color);
        background-color: var(--border-color);
    }
    .command:hover .prompt {
        color: var(--accent-hover-color);
    }
    .cursor {
        display: inline-block;
        background-color: var(--heading-color);
        animation: blinking-cursor 1s steps(2, start) infinite;
        margin-left: 0.5em;
    }
    @keyframes blinking-cursor {
        to {
            background-color: transparent;
        }
    }
</style>
