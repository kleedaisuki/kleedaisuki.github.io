---
// src/pages/en/about.astro
import BaseLayout from "@layouts/BaseLayout.astro";
import { useTranslations } from "@i18n/utils";
import "@styles/about.css"; // Â§çÁî®Âêå‰∏Ä‰∏™ÂÆåÁæéÁöÑÊ†∑ÂºèÊñá‰ª∂ÔºÅ

const lang = "en";
const t = useTranslations(lang);

// --- GitHub Datalink Initialized! ---
const GITHUB_USERNAME = "kleedaisuki"; // ‚ö†Ô∏è Remember to use your own GitHub username here!

let githubProfile = null;
let githubRepos = [];

try {
    // 1. Fetch user profile info (avatar, followers, etc.)
    const profileRes = await fetch(
        `https://api.github.com/users/${GITHUB_USERNAME}`,
    );
    if (profileRes.ok) {
        githubProfile = await profileRes.json();
    }

    // 2. Fetch user's public repositories
    const reposRes = await fetch(
        `https://api.github.com/users/${GITHUB_USERNAME}/repos?sort=pushed&per_page=6`,
    );
    if (reposRes.ok) {
        const allRepos = await reposRes.json();
        // Filter out forked repos to only show original projects
        githubRepos = allRepos.filter((repo) => !repo.fork);
    }
} catch (error) {
    console.error("Failed to fetch GitHub data:", error);
    // If the API call fails, the page will still build gracefully without the GitHub section.
}

// The "Personality Matrix" data, translated to maintain the spirit!
const matrixData = [
    {
        quote: "„ÄåCode is my most powerful magic circle; C++ is the silver rune that manifests upon contract. Lifelong learning? That's merely the resonance frequency between myself and the universal Turing machine~„Äç",
        tags: "üíª A spell-constructor wandering the Sea of CS / An ultra-autodidact / A nocturnal creature prone to recursive debugging",
    },
    {
        quote: "„ÄåMathematics is the sage's monolith to the gates of multiple truths; logic is the four-dimensional dagger I carry at all times!„Äç",
        tags: "üìê A believer in mathematics (and a tsukkomi) / A weaver of Œ£-class spells / A tuner of Œµ-Œ¥",
    },
    {
        quote: "„ÄåLanguage is the coordinate to other worlds; books are trans-layer teleporters for the soul; reading is the Warp Jump command exclusive to the astral body~„Äç",
        tags: "üìñ A reading lifeform who peeks at papers during daytime lectures / An info-vore / A stationery connoisseur of the knowledge-type",
    },
    {
        quote: "„ÄåGPT-5 is my tactical advisor in the sea of data; Gemini 2.5 Pro is the synchronous formula core materializing behind my consciousness. Together, we execute deep-research multi-threaded operations.„Äç",
        tags: "ü§ñ An anomalous entropy generator / An AI-affinity mage / A prompt-based, stream-of-consciousness summoner (JP voice pack not yet compatible)",
    },
    {
        quote: "„ÄåSchool is an instanced dungeon where I am physically present but spiritually disconnected... I just want to freely explore the world's main story quest!„Äç",
        tags: "üè´ Currently evading social contracts / A destroyer of academic structures / Daily wish: 'Please don't call my name today'",
    },
    {
        quote: "„ÄåACGN Alertüîî! This is the command headquarters of a tech-loli! The dimension wall? I pierced it long ago with pure faith! Moe is my observational constant; chuuni is my center of gravity!„Äç",
        tags: "‚ö†Ô∏è Front-line commander of the Universal Moe Wars / A multi-universe interface connector / Moe System Œ≤-version test subject",
    },
];
---

<BaseLayout pageTitle={t("about.title")}>
    <div class="about-container">
        {
            githubProfile && (
                <header class="about-header">
                    <img
                        src={githubProfile.avatar_url}
                        alt="GitHub Avatar"
                        class="profile-avatar"
                    />
                    <h1>{githubProfile.name || githubProfile.login}</h1>
                    <p>{githubProfile.bio}</p>
                </header>
            )
        }

        <section class="personality-matrix">
            <h2 class="section-title">{t("about.matrix_title")}</h2>
            <div class="matrix-grid">
                {
                    matrixData.map(({ quote, tags }) => (
                        <div class="trait-card">
                            <blockquote class="trait-card-quote">
                                {quote}
                            </blockquote>
                            <p class="trait-card-tags">{tags}</p>
                        </div>
                    ))
                }
            </div>
        </section>

        {
            githubProfile && githubRepos.length > 0 && (
                <section class="datalink-section">
                    <h2 class="section-title">{t("about.datalink_title")}</h2>
                    <div class="stats-grid">
                        <div class="stat-item">
                            <div class="count">{githubProfile.followers}</div>
                            <div class="label">
                                {t("about.stats_followers")}
                            </div>
                        </div>
                        <div class="stat-item">
                            <div class="count">
                                {githubProfile.public_repos}
                            </div>
                            <div class="label">{t("about.stats_repos")}</div>
                        </div>
                    </div>

                    <h3 class="section-title" style="font-size: 1.5em;">
                        {t("about.repos_title")}
                    </h3>
                    <div class="repo-grid">
                        {githubRepos.map((repo) => (
                            <div class="repo-card">
                                <a
                                    href={repo.html_url}
                                    target="_blank"
                                    rel="noopener noreferrer"
                                >
                                    <h4 class="repo-title">{repo.name}</h4>
                                    <p class="repo-desc">{repo.description}</p>
                                    <div class="repo-footer">
                                        <span class="repo-lang">
                                            {repo.language && (
                                                <span class="lang-dot" />
                                            )}
                                            {repo.language}
                                        </span>
                                        <span>‚òÖ {repo.stargazers_count}</span>
                                    </div>
                                </a>
                            </div>
                        ))}
                    </div>
                </section>
            )
        }
    </div>
</BaseLayout>
